package the_number_of_good_subsets;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import java.util.Arrays;
import java.util.Collection;

@RunWith(Parameterized.class)
public class NumberOfGoodSubsets {
    private final int[] input;
    private final int expected;

    public NumberOfGoodSubsets(int[] input, int expected, String name) {
        this.input = input;
        this.expected = expected;
    }

    @Parameters(name="{2}")
    public static Collection<Object[]> testCases() {
        return Arrays.asList(new Object[][] {
                {new int[]{2,3,2,6,5,15}, 16, "2,3,2,6,5,15"},
                {new int[]{1}, 0, "1"},
                {new int[]{22,5,15,2}, 8, "22,5,15,2"},
                {new int[]{18,28,2,17,29,30,15,9,12}, 19, "18,28,2,17,29,30,15,9,12"},
                {new int[]{10,11,5,1,10,1,3,1,26,11,6,1,1,15,1,7,22,1,1,1,1,1,23,1,29,5,6,1,1,29,1,1,21,19,1,1,1,2,1,11,1,15,1,22,14,1,1,1,1,6,7,1,14,3,5,1,22,1,1,1,17,1,29,2,1,15,10,1,5,7,1,1,1,30,1,30,1,21,10,1,1,1,1,1,2,6,5,7,3,1,1,19,29,1,7,13,14,1,5,26,19,11,1,1,1,1,1,1,1,1,22,15,1,1,13,1,17,1,1,1,13,6,1,10,1,1,17,1,1,3,14,7,17,1,13,1,1,1,1,1,11,1,1,6,1,1,1,1,1,2,1,30,2,26,1,1,14,1,26,29,30,1,13,21,1,1,14,21,1,23,1,15,23,21,1,30,19,19,1,10,23,3,3,17,22,2,26,1,11,1,23,1,1,1,15,1,1,13,1,1}, 520317213, "Overflow 1"},
                {new int[]{2,17,8,1,30,26,6,2,5,10,28,15,11,15,25,24,24,13,23,27,23,24,20,1,25,1,21,23,10,21,12,14,13,26,18,21,12,14,26,8,16,11,21,8,9,5,3,25,2,14,23,23,16,8,19,5,9,26,17,15,15,17,9,18,25,14,10,30,20,21,23,19,11,21,25,8,25,1,5,17,30,4,6,2,22,18,10,18,30,12,8,6,18,23,22,4,23,27,23,27,19,11,25,20,30,16,29,1,22,26,19,2,13,8,19,23,3,27,20,18,11,2,23,3,5,16,3,23,22,7,24,25,16,13,5,17,24,14,10,19,11,29,8,16,5,14,8,26,15,7,3,11,19,12,27,24,1,6,4,16,8,7,25,12,21,20,15,25,29,6,25,5,28,10,3,27,19,12,1,13,22,5,13,5,18,6,2,10,24,7,14,7,26,10,4,17,4,24,6,5,5,1,7,5,14,18,23,10,20,7,2,28,15,30,16,8,24,11,2,4,13,10,29,11,20,8,3,17,8,4,26,26,5,16,30,7,7,22,22,14,3,29,20,17,27,2,20,23,1,7,4,16,9,15,15,23,8,11,14,18,12,3,26,27,13,17,20,27,11,5,14,12,18,19,21,20,4,27,5,17,19,5,1,18,22,16,8,29,21,3,20,17,3,15,29,4,27,2,10}, 894122736, "Overflow 2"}
        });
    }
    @Test
    public void numberOfGoodSubsets() {
        int result = new Solution().numberOfGoodSubsets(input);
        Assert.assertEquals(expected, result);
    }
}
